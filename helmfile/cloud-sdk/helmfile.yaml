repositories:
- name: stable
  url: https://kubernetes-charts.storage.googleapis.com
- name: kiwigrid 
  url: https://kiwigrid.github.io
- name: tip-cloudsdk
  url: https://tip.jfrog.io/artifactory/tip-wlan-cloud-helm-virtual-repo
  username: placeholder
  password: placeholder

environments:
  azure:
    values:
    - monitoring:
        namespace: monitoring
    - domain: tip.4c74356b41.com
    - storageClass: default
    - autoscaler:
        enabled: false
    - ingress:
        enabled: true
    - elastic:
        enabled: true
    - kibana:
        enabled: true
    - prometheus:
        enabled: true
    - external-dns:
        enabled: true
  amazon:
    values:
    - monitoring:
        namespace: monitoring
    - domain: lab.wlan.tip.build
    - storageClass: gp2
    - autoscaler:
        enabled: false
    - ingress:
        enabled: true
    - elastic:
        enabled: true
    - kibana:
        enabled: true
    - prometheus:
        enabled: true
    - external-dns:
        enabled: true

helmDefaults:
  force: true
  timeout: 600
  wait: false
  # # dont seem to work
  # recreatePods: true
  # verify: true

templates:
  default: &default
    namespace: kube-system
    missingFileHandler: Warn
    # values:
    # - envs/common/{{`{{ .Release.Name }}`}}.yaml.gotmpl
    # - envs/{{`{{ .Environment.Name }}`}}/{{`{{ .Release.Name }}`}}.yaml.gotmp

# core setup
releases:
- name: cluster-autoscaler
  condition: autoscaler.enabled
  <<: *default
  chart: stable/cluster-autoscaler
  version: 7.3.2
  labels:
    group: system
    role: setup
    app: autoscaler
- name: external-dns
  condition: external-dns.enabled
  <<: *default
  chart: stable/external-dns
  version: 2.20.4
  labels:
    group: system
    role: setup
    app: external-dns

- name: nginx-ingress
  condition: ingress.enabled
  <<: *default
  chart: stable/nginx-ingress
  version: 1.40.2
  labels:
    group: system
    role: setup
    app: nginx-ingress
  values:
  - controller:
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          additionalLabels:
            release: prometheus-operator

- name: prometheus-operator
  namespace: {{ .Environment.Values.monitoring.namespace }}
  chart: stable/prometheus-operator
  labels:
    app: prometheus-operator
    role: setup
  values:
  - prometheusOperator:
      manageCrds: true
      createCustomResource: false
  - prometheus:
      enabled: true
      ingress:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
        hosts:
        - prometheus.{{ .Environment.Values.domain }}
  - grafana:
      grafana.ini:
        users:
          viewers_can_edit: true
        auth:
          disable_login_form: true
          disable_signout_menu: true
        auth.anonymous:
          enabled: true
          org_role: Viewer
      testFramework:
        enabled: false
      ingress:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
        hosts:
        - grafana.{{ .Environment.Values.domain }}
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: imported
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          mosquitto: # metrics are there, but have no data
            gnetId: 11542
            revision: 1
            datasource: Prometheus
          nginx-ingress:
            gnetId: 9614
            revision: 1
            datasource: Prometheus
          postgres:
            gnetId: 6742
            revision: 1
            datasource: Prometheus
      datasources:
       datasources.yaml:
        apiVersion: 1
        datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-operated:9090
          access: proxy
          isDefault: false

- name: prometheus-operator-helper
  namespace: {{ .Environment.Values.monitoring.namespace }}
  chart: charts/standalone-monitoring
  labels:
    app: prometheus-operator
    sub: helper
    role: setup
  values:
  - monitoring:
      namespace: monitoring
      domain: {{ .Environment.Values.domain }}
    proxy:
      namespace: kube-system
- name: prometheus-operator-ingress-auth
  <<: *default
  chart: charts/sso
  labels:
    app: prometheus-operator
    sub: oAuth
    role: setup
  values:
  - charts/sso/values.local.yaml # temporary solution to workaround secrets in plain text in the repo
  - monitoring:
      namespace: {{ .Environment.Values.monitoring.namespace }}

- name: fluentd
  condition: elastic.enabled
  namespace: {{ .Environment.Values.monitoring.namespace }}
  chart: kiwigrid/fluentd-elasticsearch
  labels:
    app: fluentd
    role: setup
  values:
  - elasticsearch:
      serviceAccount:
        create: true
      awsSigningSidecar:
        enabled: false
      hosts:
      - elasticsearch-client.{{ .Environment.Values.monitoring.namespace }}.svc.cluster.local 
- name: elasticsearch
  condition: elastic.enabled
  namespace: {{ .Environment.Values.monitoring.namespace }}
  chart: stable/elasticsearch
  labels:
    app: elasticsearch
    role: setup
- name: kibana
  condition: kibana.enabled
  namespace: {{ .Environment.Values.monitoring.namespace }}
  chart: stable/kibana
  labels:
    app: kibana
    role: setup
  values:
  - testFramework:
      enabled: false
  - image:
      tag: "6.8.6"
  - files:
      kibana.yml:
        elasticsearch.hosts: http://elasticsearch-client.{{ .Environment.Values.monitoring.namespace }}.svc.cluster.local:9200
  - ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
      hosts:
      - kibana.{{ .Environment.Values.domain }}

# cloud sdk
- name: tip
  namespace: tip
  chart: tip-wlan
  # chart: tip-cloudsdk/tip-wlan
  labels:
    app: cloudsdk
    role: payload
  values:
  - tip-wlan/resources/environments/dev.yaml
  - wlan-cloud-graphql-gw:
      env:
        portalsvc: graphql.{{ .Environment.Values.domain }}
      ingress:
        hosts:
        - host: graphql.{{ .Environment.Values.domain }}
          paths:
          - "/"
  - wlan-cloud-static-portal:
      ingress:
        hosts:
        - host: portal.{{ .Environment.Values.domain }}
          paths:
          - "/"
  - nginx-ingress-controller:
      enabled: false
      prometheus:
        create: true
      controller:
        config:
          externalStatusAddress: api.{{ .Environment.Values.domain }}
  - opensync-mqtt-broker:
      persistence:
        storageClass: {{ .Environment.Values.storageClass }}
  - zookeeper:
      persistence:
        storageClass: {{ .Environment.Values.storageClass }}
  - kafka:
      persistence:
        storageClass: {{ .Environment.Values.storageClass }}
  - cassandra:
      persistence:
        storageClass: {{ .Environment.Values.storageClass }}
  - postgresql:
      postgresqlDatabase: tip
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: {{ .Environment.Values.monitoring.namespace }}
      persistence:
        storageClass: {{ .Environment.Values.storageClass }}
  - wlan-ssc-service:
      enabled: false
