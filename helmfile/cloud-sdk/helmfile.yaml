repositories:
- name: stable
  url: https://kubernetes-charts.storage.googleapis.com
- name: kiwigrid 
  url: https://kiwigrid.github.io

environments:
  azure:
    values:
    - domain: tip.4c74356b41.com
    - storageClass: default
    - autoscaler:
        enabled: false
    - ingress:
        enabled: true
    - elastic:
        enabled: true
    - prometheus:
        enabled: true
  amazon:
    values:
    - domain: tip.4c74356b41.com
    - storageClass: gp2
    - autoscaler:
        enabled: false
    - ingress:
        enabled: true
    - elastic:
        enabled: true
    - prometheus:
        enabled: true

helmDefaults:
  wait: false
  force: true
  timeout: 600

templates:
  default: &default
    namespace: kube-system
    missingFileHandler: Warn
    # values:
    # - envs/common/{{`{{ .Release.Name }}`}}.yaml.gotmpl
    # - envs/{{`{{ .Environment.Name }}`}}/{{`{{ .Release.Name }}`}}.yaml.gotmp

# core setup
releases:
- name: cluster-autoscaler
  condition: autoscaler.enabled
  <<: *default
  chart: stable/cluster-autoscaler
  version: 7.3.2
  labels:
    group: system
    role: setup
    app: autoscaler
- name: nginx-ingress
  condition: ingress.enabled
  <<: *default
  chart: stable/nginx-ingress
  version: 1.40.2
  labels:
    group: system
    role: setup
    app: nginx-ingress
  set:
  - name: controller.metrics.enabled
    value: true
  - name: controller.metrics.serviceMonitor.enabled
    value: true
  - name: controller.metrics.serviceMonitor.additionalLabels.release
    value: prometheus-operator

- name: prometheus-operator
  namespace: monitoring
  chart: stable/prometheus-operator
  labels:
    app: prometheus-operator
    role: setup
  set:
  - name: prometheusOperator.manageCrds
    value: true
  - name: prometheusOperator.createCustomResource
    value: false
  - name: prometheus.enabled
    value: true
  - name: grafana.ingress.enabled
    value: true
  - name: grafana.dashboardProviders.dashboardproviders\.yaml.apiVersion
    value: 1
  - name: grafana.dashboardProviders.dashboardproviders\.yaml.providers[0].name
    value: default
  - name: grafana.dashboardProviders.dashboardproviders\.yaml.providers[0].orgId
    value: 1
  - name: grafana.dashboardProviders.dashboardproviders\.yaml.providers[0].folder
    value: imported
  - name: grafana.dashboardProviders.dashboardproviders\.yaml.providers[0].type
    value: file
  - name: grafana.dashboardProviders.dashboardproviders\.yaml.providers[0].disableDeletion
    value: false
  - name: grafana.dashboardProviders.dashboardproviders\.yaml.providers[0].editable
    value: true
  - name: grafana.dashboardProviders.dashboardproviders\.yaml.providers[0].options.path
    value: /var/lib/grafana/dashboards/default
  - name: grafana.ingress.hosts[0]
    value: grafana.{{ .Environment.Values.domain }}
  - name: grafana.dashboards.default.nginx-ingress.gnetId
    value: 9614
  - name: grafana.dashboards.default.nginx-ingress.revision
    value: 1
  - name: grafana.dashboards.default.nginx-ingress.datasource
    value: Prometheus
  - name: grafana.dashboards.default.postgres.gnetId
    value: 6742
  - name: grafana.dashboards.default.postgres.revision
    value: 1
  - name: grafana.dashboards.default.postgres.datasource
    value: Prometheus
  - name: grafana.testFramework.enabled
    value: false

- name: fluentd
  condition: elastic.enabled
  namespace: monitoring
  chart: kiwigrid/fluentd-elasticsearch
  labels:
    app: fluentd
    role: setup
  set:
  - name: elasticsearch.hosts[0]
    value: elasticsearch-client.monitoring.svc.cluster.local
  - name: serviceAccount.create
    value: true
  - name: awsSigningSidecar.enabled
    value: false
- name: elasticsearch
  condition: elastic.enabled
  namespace: monitoring
  chart: stable/elasticsearch
  labels:
    app: elasticsearch
    role: setup
- name: kibana
  condition: elastic.enabled
  namespace: monitoring
  chart: stable/kibana
  labels:
    app: kibana
    role: setup
  set:
  - name: testFramework.enabled
    value: false
  - name: image.tag
    value: "6.8.6" # else it complains about version mismatch with elastic
  - name: files.kibana\.yml.elasticsearch\.hosts
    value: http://elasticsearch-client.monitoring.svc.cluster.local:9200
  - name: ingress.enabled
    value: true
  - name: ingress.hosts[0]
    value: kibana.{{ .Environment.Values.domain }}

# cloud sdk
- name: tip
  namespace: tip
  chart: tip-wlan
  labels:
    app: cloudsdk
    role: payload
  values:
  - tip-wlan/resources/environments/dev.yaml
  - wlan-cloud-graphql-gw:
      env:
        portalsvc: graphql.{{ .Environment.Values.domain }}
      ingress:
        hosts:
        - host: graphql.{{ .Environment.Values.domain }}
          paths:
          - "/"
  - wlan-cloud-static-portal:
      ingress:
        hosts:
        - host: portal.{{ .Environment.Values.domain }}
          paths:
          - "/"
  - nginx-ingress-controller:
      enabled: false
      prometheus:
        create: true
      controller:
        config:
          externalStatusAddress: api.{{ .Environment.Values.domain }}
  - opensync-mqtt-broker:
      persistence:
        storageClass: "{{ .Environment.Values.storageClass }}"
  - zookeeper:
      persistence:
        storageClass: "{{ .Environment.Values.storageClass }}"
  - kafka:
      persistence:
        storageClass: "{{ .Environment.Values.storageClass }}"
  - cassandra:
      persistence:
        storageClass: "{{ .Environment.Values.storageClass }}"
  - postgresql:
      postgresqlDatabase: tip
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: monitoring
      persistence:
        storageClass: "{{ .Environment.Values.storageClass }}"
  - wlan-ssc-service:
      enabled: false
